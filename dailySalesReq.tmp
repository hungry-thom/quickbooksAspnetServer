/*-----------------------------------------------------------

 * CustomerAddForm : implementation file

 *

 * Description:  This sample demonstrates the simple use 

 *               QuickBooks qbXMLRP COM object

 *				 Also it shows how to create and parse qbXML 	

 *				 using .NET XML classes

 *

 * Created On: 8/15/2002

 *

 * Copyright © 2002-2013 Intuit Inc. All rights reserved.

 * Use is subject to the terms specified at:

 *      http://developer.intuit.com/legal/devsite_tos.html

 *

 *----------------------------------------------------------

 */ 





using System;

using System.Data;

using System.Xml;

using Interop.QBXMLRP2;

using Newtonsoft.Json;

using Newtonsoft.Json.Converters;

using Newtonsoft.Json.Linq;



namespace CustomerAdd

{

	/// <summary>

	/// CustomerAddForm shows how to invoke QuickBooks qbXMLRP COM object

	/// It uses .NET to create qbXML request and parse qbXML response

	/// </summary>

	public class HelloWorld

	{

		public static void Main() 

		{
			//step1: import QBXML

      //XmlTextReader reader = new XmlTextReader ("checkQuery.xml");


			// string input = inputXMLDoc.OuterXml;
      string sDate = System.IO.File.ReadAllText(@".\runHistory.ini");
      string eDate = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss");
			string template = System.IO.File.ReadAllText(@".\dailySalesQuery.xml");
      string input = template.Replace("STARTDATE", sDate).Replace("ENDDATE", eDate);
			// string input = System.IO.File.ReadAllText(@"salesQuery.xml");

			Console.WriteLine ("XML: {0}", input);

			//step3: do the qbXMLRP request

			RequestProcessor2 rp = null; 

			string ticket = null;

			string response = null;

			try 

			{

				rp = new RequestProcessor2 ();
				Console.Write ("check2 {0}", rp);
				rp.OpenConnection("", "IDN CustomerAdd C# sample" );
				Console.WriteLine ("check3 {0}", rp);
				ticket = rp.BeginSession("", QBFileMode.qbFileOpenDoNotCare );
				Console.WriteLine ("check1 {0}", rp);

				response = rp.ProcessRequest(ticket, input);

					

			}

			catch( System.Runtime.InteropServices.COMException ex )

			{

				Console.WriteLine ( "COM Error Description = " +  ex.Message, "COM error" );

				return;

			}

			finally

			{

				if( ticket != null )

				{

					rp.EndSession(ticket);

				}

				if( rp != null )

				{

					rp.CloseConnection();

				}

			};



			//step4: parse the XML response and export

			XmlDocument outputXMLDoc = new XmlDocument();

			outputXMLDoc.LoadXml(response);
			string json = JsonConvert.SerializeXmlNode(outputXMLDoc);
			// JObject json2 = JObject.Parse(json)
      // Console.WriteLine("response {0}", json2.SelectToken("QBXML.QBXMLMsgsRs.SalesReceiptQueryRs.SalesReceiptRet")); // .QBXML.SalesReceiptRet
      System.IO.File.WriteAllText(@".\salesResponse.json", json);
      System.IO.File.WriteAllText(@".\runHistory.ini", eDate);

		}

	}

}
